class EncryptedMessageViewHolder(resId: Int, viewGroup:
ViewGroup?, private val eThree: EThree) :
MessageListItemViewHolder(resId, viewGroup) {
override fun bind(
context: Context,
channelState: ChannelState,
messageListItem: MessageListItem,
position: Int
) {
if (messageListItem.message.type !=
ModelType.message_regular) {
super.bind(context, channelState, messageListItem,
position)
return
 
}
doAsync {
val decryptedMessage =
messageListItem.message.copy()
if (messageListItem.isMine) {
decryptedMessage.text =
eThree.decrypt(decryptedMessage.text)
} else {
val publicKey =
eThree.lookupPublicKeys(decryptedMessage.user.id)
.get()[decryptedMessage.user.id]
decryptedMessage.text =
eThree.decrypt(decryptedMessage.text, publicKey)
}
val decryptedItem =
MessageListItem(decryptedMessage,
messageListItem.positions, messageListItem.isMine)
uiThread {
super.bind(context, channelState, decryptedItem,
position)
}
}
}
}


